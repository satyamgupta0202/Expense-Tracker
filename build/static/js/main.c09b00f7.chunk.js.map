{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","selected","className","value","onChange","e","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","useState","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","console","log","style","height","label","Chart","dataPointsValue","datapoints","maxV","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","EnteredTitle","setEnteredTitle","EnteredAmount","setEnteredAmount","EnteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpensData","random","onAddExpense","dummyExpenses","App","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c09b00f7.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const { selected } = props;\n  const onChangeYear = (e) => {\n    props.onChangeFilter(e.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={selected} onChange={onChangeYear}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;","import  './Card.css' ;\nfunction Card(props){\n    const classes = 'card ' + props.className;\n    return(\n        <div className = {classes}> {props.children}  </div>\n        )\n    }\nexport default Card;","import React, { useState } from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  //Don't keep state functions unknowingly in some function\n  // we use const here because here we don't use = to update the value\n  //rather the updatation occcurs in react memory somwhere\n  const [title, setTiltle] = useState(props.title);\n  const buttonClicked = () => {\n    //Note that on first click it displays the previous title only.\n    //state change re-renders single Expense item that is been clicked by particlar btn.\n    setTiltle(\"Updated\");\n    console.log(title);\n  };\n\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      {/* onClick is the Prop bsically added to all sortsof the elemnts in react  */}\n      {/* <button onClick={buttonClicked}>Title Change!</button> */}\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No Items here!!!!</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n      ;\n    </ul>\n  );\n};\nexport default ExpensesList;\n","import \"../Chart/ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n    console.log(barFillHeight);\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"../Chart/ChartBar\";\n\nconst Chart = (props) => {\n  const dataPointsValue = props.datapoints.map(\n    (datapoints) => datapoints.value\n  );\n  const maxV = Math.max(...dataPointsValue);\n  return (\n    <div className=\"chart\">\n      {props.datapoints.map((datapoints) => (\n        <ChartBar\n          key={datapoints.label}\n          value={datapoints.value}\n          maxValue={maxV}\n          label={datapoints.label}\n        />\n      ))}\n    </div>\n  );\n};\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"jan\", value: 0 },\n    { label: \"feb\", value: 0 },\n    { label: \"mar\", value: 0 },\n    { label: \"apr\", value: 0 },\n    { label: \"may\", value: 0 },\n    { label: \"jun\", value: 0 },\n    { label: \"jul\", value: 0 },\n    { label: \"aug\", value: 0 },\n    { label: \"sep\", value: 0 },\n    { label: \"oct\", value: 0 },\n    { label: \"nov\", value: 0 },\n    { label: \"dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart datapoints={chartDataPoints} />;\n};\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n//import ExpenseItem from \"./ExpenseItem\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\n\n//card = makes the big box inside with the small components are placed.\n// we call the expenseitem component and so we import it\n// remember that props were kept within items\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangedHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangedHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  //useSattes for the Form Initial Conditions\n\n  const [EnteredTitle, setEnteredTitle] = useState(\" \");\n  const [EnteredAmount, setEnteredAmount] = useState(\" \");\n  const [EnteredDate, setEnteredDate] = useState(\" \");\n\n  //handles title of the form\n  const titleChangedHandler = (event) => {\n    console.log(event.target.value);\n    setEnteredTitle(event.target.value); ///set the value of the title in the function to re-render it\n  };\n  //handles aount and sets it in the function\n  const amountChangedHandler = (event) => {\n    console.log(event.target.value);\n    setEnteredAmount(event.target.value);\n  };\n  //set the date\n  const dateChangedHandler = (event) => {\n    console.log(event.target.value);\n    setEnteredDate(event.target.value);\n  };\n\n  //submit button handler extrat the data and then clear it\n  const submitButtonHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: EnteredTitle,\n      amount: EnteredAmount,\n      date: new Date(EnteredDate),\n    };\n\n    //very Important : This is the unique way to move from child To parent ..this function call or ejects it's functionality\n    // to NewExpense file which displays the contnent in the NewExpense file that is the data of Form.\n\n    props.onSaveExpenseData(expenseData);\n    ////////////////////////////////////////////////////////\n    setEnteredTitle(\" \");\n    setEnteredAmount(\" \");\n    setEnteredDate(\" \");\n    // console.log(expenseData);\n  };\n  //   <div className=\"new-expense__controls\">\n  //     <button type=\"submit\">Show Form</button>\n  //   </div>;\n  return (\n    <form onSubmit={submitButtonHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={EnteredTitle}\n            onChange={titleChangedHandler}\n          ></input>\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={EnteredAmount}\n            onChange={amountChangedHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          {/* label basically is the title of the value to be inputted */}\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2023-01-01\"\n            value={EnteredDate}\n            onChange={dateChangedHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel{\" \"}\n        </button>\n        <button type=\"submit\">AddExpense</button>\n      </div>\n\n      {/* <div>\n        <button type=\"submit\">Cancel</button>\n      </div> */}\n    </form>\n  );\n};\nexport default ExpenseForm;\n","import ExpenseForm from \"./ExpenseForm\";\nimport React, { useState } from \"react\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const setNewExpenseHandler = () => {\n    setIsEditing(true);\n  };\n  const saveExpenseDataHandler = (enteredExpensData) => {\n    const expenseData = {\n      ...enteredExpensData,\n      id: Math.random().toString,\n    };\n    //console.log(expenseData);\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n  const onCancelHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense \">\n      {!isEditing && (\n        <button onClick={setNewExpenseHandler}>Set New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={onCancelHandler}\n        />\n      )}\n    </div>\n  );\n};\nexport default NewExpense;\n","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nconst dummyExpenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  //Static Investment Array of Object\n  \n\n  const [expenses , setExpenses] = useState(dummyExpenses);\n\n  const AddExpenseHandler = expense=> {\n    setExpenses((prevExpense)=>{\n      console.log(prevExpense);\n      return [ expense, ...prevExpense];\n    })\n    //console.log(\"We are at Parent Directory\");\n   // console.log(expense);\n  }\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n//we call the component Expense which ctrl the general Layout of the expenses\n//we pass the props in it of the expenses array of object\n// props: items = {expenses}\nconsole.log(expenses);\n  return (\n    <div>\n      <NewExpense onAddExpense = {AddExpenseHandler}/>\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}